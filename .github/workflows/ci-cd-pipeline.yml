name: Terraform CI/CD Pipeline
 
# Trigger the workflow on push or pull request to the main branch

on:

  push:

    branches:

      - main

  pull_request:

    branches:

      - main
 
# Define jobs for the workflow

jobs:

  terraform:

    name: Terraform Workflow

    runs-on: self-hosted
 
    steps:

      # Step 1: Checkout the repository

      - name: Checkout repository

        uses: actions/checkout@v3
 
      # Step 2: Set up Terraform CLI

      - name: Setup Terraform

        uses: hashicorp/setup-terraform@v2

        with:

          terraform_version: 1.5.5 # Specify your required Terraform version
 
      # Step 3: Configure Google Cloud Credentials

      - name: Authenticate with GCP

        env:

          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

        run: |

          echo "${{ secrets.GCP_CREDENTIALS }}" > $HOME/gcp-key.json

          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcp-key.json
 
      # Step 4: Initialize Terraform

      - name: Terraform Init

        run: |

          cd GKE_DevSecOps

          terraform init
 
      # Step 5: Validate Terraform configuration

      - name: Terraform Validate

        run: |

          cd GKE_DevSecOps

          terraform validate
 
      # Step 6: Plan Terraform changes

      - name: Terraform Plan

        run: |

          cd GKE_DevSecOps

          terraform plan -out=tfplan
 
      # Step 7: (Optional) Apply Terraform changes (Requires Manual Approval)

      - name: Terraform Apply

        if: github.event_name == 'push'

        run: |

          cd GKE_DevSecOps

          terraform apply -auto-approve tfplan
 
      # Step 8: Clean up temporary files

      - name: Clean Up

        run: rm -f $HOME/gcp-key.json

 
